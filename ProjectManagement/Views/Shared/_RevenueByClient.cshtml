@using System.Globalization;
@model ProjectManagement.Models.ViewModels.RevenueByClientVM
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<section class="card shadow" id="RevenueByClientSection">
    <div class="card-header d-flex justify-content-between align-items-center">
        <div>
            <h2>Revenue By Client</h2>
        </div>
        <ul style="list-style:none" class="list-group list-group-horizontal" id="revenueByClientFilters">
            <li style="margin-right:10px">
                <div class="input-group">
                    <span class="input-group-text bg-dark fw-bold text-white border-dark">Company</span>
                    <select onchange="RevenueByClientFilter()" name="revenueByClientCompany" id="revenueByClientCompany" class="form-select border-dark fw-bold" asp-items="ViewBag.CompanyList">
                    </select>
                </div>
            </li>
            <li>
                <div class="input-group" style="width:150px;">
                    <span class="input-group-text bg-dark fw-bold text-white border-dark" id="yearDropdownLable">Year</span>
                    <select onchange="RevenueByClientFilter()" name="revenueByClientYear" id="revenueByClient" class="form-select border-dark fw-bold" asp-items="ViewBag.Year">
                    </select>
                </div>
            </li>
        </ul>
    </div>

    <div class="card-body table-responsive">
        @if (Model != null && Model.ClientByProfitList.Count() != 0)
        {
            <table id="RevenueByRecruiterTable" class="table table-striped table-bordered">
                <thead class="table-dark">

                    <tr>
                        <th>
                            Client
                        </th>

                        @foreach (var month in Model.ClientByProfitList.GroupBy(x => x.Month).OrderBy(x => x.Key))
                        {
                            <th>
                                @DateTimeFormatInfo.CurrentInfo.GetMonthName(month.Key)
                            </th>
                        }

                    </tr>

                </thead>
                <tbody>
                    @{
                        foreach (var clientGroup in Model.ClientByProfitList.GroupBy(x => x.Client).OrderBy(x => x.Key.ClientName))
                        {
                            <tr>
                                <th scope="row">
                                    @clientGroup.Key.ClientName
                                </th>
                                @foreach (var month in Model.ClientByProfitList.GroupBy(x => x.Month).OrderBy(x => x.Key))
                                {
                                    <td NOWRAP>
                                        $
                                        @{
                                            var monthProfit = Model.ClientByProfitList.Where(x => x.Client.Id == clientGroup.Key.Id).Where(x => x.Month == month.Key).FirstOrDefault()?.NetProfitByClient;
                                            var monthNetProfitNumber = monthProfit == null ? 0 : monthProfit;
                                            @monthNetProfitNumber
                                        }

                                    </td>
                                }
                            </tr>
                        }
                    }

                </tbody>
            </table>
        }
        else
        {
            <p>No Data Found</p>
        }
    </div>
    <script type="text/javascript">

        function RevenueByClientFilter() {
            console.log('Test');
            var companyId = $('#revenueByClientCompany').val();
            var year = $('#revenueByClient').val();
            $('#RevenueByClientPartial').load("/Dashboard/RevenueByClientPartial?year=" + year + "&companyId=" + companyId);
        }

    </script>
</section>